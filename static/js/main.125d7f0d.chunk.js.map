{"version":3,"sources":["components/SectionHeader.js","components/SectionFooter.js","components/EducationCard.js","components/Education.js","components/PracticalExperienceCard.js","components/PracticalExperience.js","components/PersonalInfo.js","components/SkillsItem.js","components/Skills.js","App.js","index.js"],"names":["SectionHeader","props","className","id","name","SectionFooter","activeBtn","toggleForm","onClick","EducationCard","onSubmitTask","e","preventDefault","console","log","handleChange","target","value","setState","newCard","state","toggleEditForm","activeEditBtn","activeEditForm","deleteCard","bind","card","school","degree","from","to","additional","this","activecardItem","type","onSubmit","onChange","placeholder","required","min","max","step","Component","FormEducation","eduObject","cards","concat","resetForm","handleChangeSchool","uniqid","activeForm","uid","remainingCards","filter","renderCard","map","section","htmlFor","PracticalExperienceCard","company","city","title","PracticalExperience","expObject","handleChangecompany","maxLength","PersonalInfo","_handleFocus","_handleFocusOut","text","labelClassName","inputClassName","onFocus","onFocusOut","SkillsItem","tasks","task","Skills","App","Education","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.125d7f0d.chunk.js","sourcesContent":["import React from 'react'\n\nconst SectionHeader = (props) => {\n\n    return (\n        <div className='section-header'id={props.name}>\n            <h4>{props.name}</h4>\n        </div>\n    )\n\n}\n\nexport default SectionHeader","import React from 'react'\n\nconst SectionFooter = (props) => {\n\n    const { activeBtn, toggleForm } = props;\n\n    function addClick() {\n        //console.log('add + open form')\n        toggleForm()\n    };\n\n    return (\n        <div className='section-footer'>\n            <button \n                className={activeBtn}\n                onClick={addClick}\n            >Add</button>\n        </div>\n    )\n\n}\n\nexport default SectionFooter","import React, { Component } from 'react'\n\nclass EducationCard extends Component {\n    constructor(props) {\n        super(props)\n        \n        this.deleteCard = props.deleteCard.bind(this)\n        \n        this.state = {\n            newCard: {\n                id: props.card.id,\n                school: props.card.school,\n                degree: props.card.degree,\n                from: props.card.from,\n                to: props.card.to,\n                additional: props.card.additional,\n            },\n            activeEditForm: false,\n            activeEditBtn: true,\n        }\n    }\n\n\n    onSubmitTask = (e) => {\n        e.preventDefault();\n        console.log('submited')\n    }\n\n    handleChange = (e) => {\n\n        const {name, value} = e.target \n        this.setState({\n          newCard: {...this.state.newCard, [name]: value}\n\n        })\n    }\n\n    toggleEditForm = () => {\n        this.setState({\n            activeEditBtn: !this.state.activeEditBtn,\n            activeEditForm: !this.state.activeEditForm\n        })\n    }\n\n    render() {\n\n        //const { section, card, deleteCard, editCard , testFunction} = props;\n        const activeEditForm = this.state.activeEditForm ? 'card-edit' : 'card-edit hidden'\n        const activeEditBtn = this.state.activeEditBtn ? 'btn edit' : 'btn edit hidden'\n        const activecardItem = this.state.activeEditBtn ? 'card-item' : 'card-item hidden'\n\n        return (\n\n        // <React.Fragment></React.Fragment>\n        <section className='card-container'>\n            <div className={activecardItem}>\n                <div className='card-info'>\n                <p className='hidden'>{this.state.newCard.id}</p>\n\n                <div className='school-info'>\n                    <h5>{this.state.newCard.school}</h5>\n                    <p className='degree'>{this.state.newCard.degree}</p>\n                </div>\n                <div className='years'>\n                    <p>{this.state.newCard.from} to {this.state.newCard.to}</p>\n                </div>\n                <div className='additional edu'>\n                    <p className='add-text'>{this.state.newCard.additional}</p>\n                </div>\n            </div>\n            <div className='card-btns'>\n                <button className={activeEditBtn} type='button' onClick={() => this.toggleEditForm()}>Edit</button>\n                <button className='btn delete' type='button' onClick={() => this.deleteCard(this.state.newCard.id)}>Delete</button>\n            </div>\n            </div>\n\n\n\n\n\n            <form className={activeEditForm} onSubmit={this.onSubmitTask}>\n                <div className='form-section h'>\n                    <input \n                        \n                        value={this.state.newCard.school}\n                        onChange={this.handleChange}\n\n                        type='text'\n                        name='school'\n                        placeholder='Edit School'\n                        required\n                    />\n                </div>\n\n                <div className='form-section h'>\n                    <input \n                        onChange={this.handleChange}\n                        value={this.state.newCard.from}\n\n                        //type=\"month\"\n                        type='number'\n                        name='from'\n                        min='1940'\n                        max='2100'\n                        step='1'\n                        placeholder='From yyyy'\n                    />\n                </div>\n\n                <div className='form-section h'>\n                    <input \n                        \n                        value={this.state.newCard.degree}\n                        onChange={this.handleChange}\n\n                        type='text'\n                        name='degree'\n                        placeholder='Edit Degree'\n                        required\n                    />\n                </div>\n\n                <div className='form-section h'>\n                    <input \n                        onChange={this.handleChange}\n                        value={this.state.newCard.to}\n\n                        //type=\"month\"\n                        type='number'\n                        name='to'\n                        min='1940'\n                        max='2100'\n                        step='1'\n                        placeholder='To yyyy'\n                    />\n                </div>\n\n                <div className='form-section'>\n                    <textarea \n                        onChange={this.handleChange}\n                        value={this.state.newCard.additional}\n\n                        type='text'\n                        name='additional'\n                        placeholder='Honors / Clubs / Acheivements'\n                    />\n                </div>\n\n                <button className='btn save' type='submit' onClick={() => this.toggleEditForm()}>Save Edit</button>\n            \n            </form>\n        </section>\n        )\n    }\n}\n\nexport default EducationCard","import React, { Component } from 'react'\nimport uniqid from \"uniqid\";\nimport SectionHeader from './SectionHeader';\nimport SectionFooter from './SectionFooter';\nimport EducationCard from './EducationCard';\n\nclass FormEducation extends Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            eduObject: {\n                id: uniqid(),\n                school: '',\n                degree: '',\n                from: '',\n                to: '',\n                additional: '',\n            },\n            cards: [],\n            activeForm: false,\n            activeBtn: true,\n        }\n    }\n    \n    handleChange = (e) => {\n        const {name, value} = e.target \n        this.setState({\n          eduObject: {...this.state.eduObject, [name]: value}\n\n        })\n      }\n\n    onSubmitTask = (e) => {\n        e.preventDefault();\n\n        this.setState({\n            cards: this.state.cards.concat(this.state.eduObject), \n            \n        });\n\n        this.resetForm()\n        console.log('submited')\n    }\n\n\n    handleChangeSchool = (e) => {\n        this.setState({\n            eduObject: {school: e.target.value}\n        })\n        console.log(this.state.eduObject)\n    }\n\n\n    resetForm = (e) => {\n        this.setState({\n            eduObject: {\n                id: uniqid(),\n                school: '',\n                degree: '',\n                from: '',\n                to: '',\n                additional: '',\n            }\n        })\n        this.toggleForm()\n    }\n       \n    toggleForm = () => {\n        this.setState({\n            activeForm: !this.state.activeForm,\n            activeBtn: !this.state.activeBtn\n        })\n    }\n\n    deleteCard = (uid) => {\n        console.log('delete-card')\n        const remainingCards = this.state.cards.filter(card => {\n            return card.id !== uid\n        })\n        this.setState({\n            cards: remainingCards\n        })\n    }\n\n\n    render() {\n\n        const activeForm = this.state.activeForm ? 'form education' : 'form education hidden';\n        const activeBtn = this.state.activeBtn ? 'btn add-edu' : 'btn add-edu hidden';\n\n        const renderCard = this.state.cards.map((card) => {\n            //console.log('rendercard')\n            return <EducationCard \n                    key={card.id}\n                    section='education'\n                    card={card}\n                    deleteCard={this.deleteCard}\n                    />\n        })\n\n        return (\n        <div className='container education'>   \n\n            <SectionHeader name='Education'/>\n\n            {renderCard}\n\n            <form className={activeForm} onSubmit={this.onSubmitTask}>\n\n                <div className='form-section h'>\n                    <label htmlFor='school'>School</label>\n                    <input \n                        \n                        value={this.state.eduObject.school}\n                        onChange={this.handleChange}\n\n                        type='text'\n                        name='school'\n                        placeholder='Enter School'\n                        required\n                    />\n                </div>\n\n                <div className='form-section h'>\n                    <label htmlFor='degree'>Degree</label>\n                    <input \n                        onChange={this.handleChange}\n                        value={this.state.eduObject.degree}\n\n                        type='text'\n                        name='degree'\n                        placeholder='Enter Degree'\n                        required\n                    />\n                </div>\n\n                <div className='form-section h'>\n                    <label htmlFor='year-from'>From</label>\n                    <input \n                        onChange={this.handleChange}\n                        value={this.state.eduObject.from}\n\n                        //type=\"month\"\n                        type='number'\n                        name='from'\n                        min='1940'\n                        max='2100'\n                        step='1'\n                        id='year-from'\n                        placeholder='YYYY'\n                    />\n                </div>\n\n                <div className='form-section h'>\n                    <label htmlFor='year-to'>To</label>\n                    <input \n                        onChange={this.handleChange}\n                        value={this.state.eduObject.to}\n\n                        //type=\"month\"\n                        type='number'\n                        name='to'\n                        min='1940'\n                        max='2100'\n                        step='1'\n                        id='year-to'\n                        placeholder='YYYY'\n                    />\n                </div>\n\n                <div className='form-section'>\n                    <label htmlFor='degree-input'>Additional</label>\n                    <textarea \n                        onChange={this.handleChange}\n                        value={this.state.eduObject.additional}\n\n                        type='text'\n                        name='additional'\n                        id='school-add'\n                        placeholder='Honors / Clubs / Acheivements'\n                    />\n                </div>\n\n                <div className='form-btns'>\n                    <button type='submit' className='btn submit' >Add School</button>\n                    <button type='cancel' className='btn cancel' onClick={this.resetForm}>Cancel</button>\n                </div>\n            </form>\n            \n            <SectionFooter activeBtn={activeBtn} toggleForm={this.toggleForm}/>\n\n        </div> \n        )\n    }\n}\n\nexport default FormEducation","import uniqid from \"uniqid\";\nimport React, { Component } from 'react'\n\nclass PracticalExperienceCard extends Component {\n    constructor(props) {\n        super(props)\n        //this.editCard = props.editCard.bind(this)\n        this.deleteCard = props.deleteCard.bind(this)\n        \n        this.state = {\n            newCard: {\n                id: props.card.id,\n                company: props.card.company,\n                city: props.card.city,\n                state: props.card.state,\n                title: props.card.title,\n                from: props.card.from,\n                to: props.card.to,\n                additional: props.card.additional,\n            },\n            activeEditForm: false,\n            activeEditBtn: true,\n        }\n    }\n\n\n    onSubmitTask = (e) => {\n        e.preventDefault();\n        console.log('submited')\n    }\n\n    handleChange = (e) => {\n        //changes DOM directly\n        // this.setState({\n        //     newCard: {company: e.target.value}\n        // })\n\n        const {name, value} = e.target \n        this.setState({\n          newCard: {...this.state.newCard, [name]: value}\n\n        })\n    }\n\n    toggleEditForm = () => {\n        this.setState({\n            activeEditBtn: !this.state.activeEditBtn,\n            activeEditForm: !this.state.activeEditForm\n        })\n    }\n\n    render() {\n\n        //const { section, card, deleteCard, editCard , testFunction} = props;\n        const activeEditForm = this.state.activeEditForm ? 'card-edit' : 'card-edit hidden'\n        const activeEditBtn = this.state.activeEditBtn ? 'btn edit' : 'btn edit hidden'\n        const activecardItem = this.state.activeEditBtn ? 'card-item' : 'card-item hidden'\n\n        return (\n\n        // <React.Fragment></React.Fragment>\n        <section className='card-container'>\n            <div className={activecardItem}>\n                <div className='card-info'>\n                <p className='hidden'>{this.state.newCard.id}</p>\n\n                <div className='company-info'>\n                    <h5>{this.state.newCard.company}</h5>\n                    <p className='title'>{this.state.newCard.title}</p>\n                </div>\n                <div className='location'>\n                    <p className='city'>{this.state.newCard.city}</p>\n                    <p className='state'>, {this.state.newCard.state}</p>\n                </div>\n                <div className='years'>\n                    <p>{this.state.newCard.from} to {this.state.newCard.to}</p>\n                </div>\n                <div className='additional exp'>\n                    <p className='add-text'>{this.state.newCard.additional}</p>\n                </div>\n            </div>\n            <div className='card-btns'>\n                <button className={activeEditBtn} type='button' onClick={() => this.toggleEditForm()}>Edit</button>\n                <button className='btn delete' type='button' onClick={() => this.deleteCard(this.state.newCard.id)}>Delete</button>\n            </div>\n            </div>\n\n\n\n\n\n            <form className={activeEditForm} onSubmit={this.onSubmitTask}>\n                <div className='form-section h'>\n                    {/* <label htmlFor='company'>company EDIT</label> */}\n                    <input \n                        \n                        value={this.state.newCard.company}\n                        onChange={this.handleChange}\n\n                        type='text'\n                        name='company'\n                        placeholder='Edit Company'\n                        required\n                    />\n                </div>\n\n                <div className='form-section hh'>\n                    <input \n                        \n                        value={this.state.newCard.city}\n                        onChange={this.handleChange}\n\n                        type='text'\n                        name='city'\n                        placeholder='City XX'\n                        required\n                    />\n                </div>\n\n                <div className='form-section hh'>\n                    <input \n                        \n                        value={this.state.newCard.state}\n                        onChange={this.handleChange}\n\n                        type='text'\n                        name='state'\n                        placeholder='State'\n                        required\n                    />\n                </div>\n\n                <div className='form-section h'>\n                    <input \n                        \n                        value={this.state.newCard.title}\n                        onChange={this.handleChange}\n\n                        type='text'\n                        name='title'\n                        placeholder='Edit Title'\n                        required\n                    />\n                </div>\n\n                <div className='form-section hh'>\n                    <input \n                        onChange={this.handleChange}\n                        value={this.state.newCard.from}\n\n                        //type=\"month\"\n                        type='number'\n                        name='from'\n                        min='1940'\n                        max='2100'\n                        step='1'\n                        placeholder='From yyyy'\n                    />\n                </div>\n\n\n\n                <div className='form-section hh'>\n                    <input \n                        onChange={this.handleChange}\n                        value={this.state.newCard.to}\n\n                        //type=\"month\"\n                        //type='number'\n                        type='text'\n                        name='to'\n                        min='1940'\n                        max='2100'\n                        step='1'\n                        placeholder='To yyyy'\n                    />\n                </div>\n\n                <div className='form-section'>\n                    <textarea \n                        onChange={this.handleChange}\n                        value={this.state.newCard.additional}\n\n                        type='text'\n                        name='additional'\n                        placeholder='Responsibilites / Achievements'\n                    />\n                </div>\n\n\n\n\n\n                <button className='btn save' type='submit' onClick={() => this.toggleEditForm()}>Save Edit</button>\n            </form>\n        </section>\n        )\n    }\n}\n\nexport default PracticalExperienceCard","import React, { Component } from 'react'\nimport uniqid from \"uniqid\";\nimport SectionHeader from './SectionHeader';\nimport SectionFooter from './SectionFooter';\nimport PracticalExperienceCard from './PracticalExperienceCard';\n\nclass PracticalExperience extends Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            expObject: {\n                id: uniqid(),\n                company: '',\n                city: '',\n                state: '',\n                title: '',\n                from: '',\n                to: '',\n                additional: '',\n            },\n            cards: [],\n            activeForm: false,\n            activeBtn: true,\n        }\n    }\n    \n    handleChange = (e) => {\n        const {name, value} = e.target \n        this.setState({\n          expObject: {...this.state.expObject, [name]: value}\n\n        })\n      }\n\n    onSubmitTask = (e) => {\n        e.preventDefault();\n\n        this.setState({\n            cards: this.state.cards.concat(this.state.expObject),\n        });\n\n        this.resetForm()\n    }\n\n\n    handleChangecompany = (e) => {\n        this.setState({\n            expObject: {company: e.target.value}\n        })\n        //console.log(this.state.expObject)\n    }\n\n\n    resetForm = (e) => {\n        this.setState({\n            expObject: {\n                id: uniqid(),\n                company: '',\n                city: '',\n                state: '',\n                title: '',\n                from: '',\n                to: '',\n                additional: '',\n            }\n        })\n        this.toggleForm()\n    }\n       \n    toggleForm = () => {\n        this.setState({\n            activeForm: !this.state.activeForm,\n            activeBtn: !this.state.activeBtn\n        })\n    }\n\n    deleteCard = (uid) => {\n        console.log('delete-card')\n        const remainingCards = this.state.cards.filter(card => {\n            return card.id !== uid\n        })\n        this.setState({\n            cards: remainingCards\n        })\n    }\n\n\n    render() {\n\n        const activeForm = this.state.activeForm ? 'form practical-exp' : 'form practical-exp hidden';\n        const activeBtn = this.state.activeBtn ? 'btn add-exp' : 'btn add-exp hidden';\n\n        const renderCard = this.state.cards.map((card) => {\n            return <PracticalExperienceCard \n                    key={card.id}\n                    section='practical exp'\n                    card={card}\n                    deleteCard={this.deleteCard}\n\n                    />\n        })\n\n        return (\n        <div className='container practical-exp'>   \n\n            <SectionHeader name='Practical Experience'/>\n\n            {renderCard}\n\n            <form className={activeForm} onSubmit={this.onSubmitTask}>\n                {/*onSubmit={this.onSubmitTask}*/}\n\n                <div className='form-section h'>\n                    <label htmlFor='company'>Company</label>\n                    <input \n                        value={this.state.expObject.company}\n                        onChange={this.handleChange}\n\n                        type='text'\n                        name='company'\n                        placeholder='Enter Company'\n                        required\n                    />\n                </div>\n\n                <div className='form-section hh'>\n                    <label htmlFor='city'>City</label>\n                    <input \n                        value={this.state.expObject.city}\n                        onChange={this.handleChange}\n\n                        type='text'\n                        name='city'\n                        placeholder='City'\n                        required\n                    />\n                </div>\n\n                <div className='form-section hh'>\n                    <label htmlFor='state'>State</label>\n                    <input \n                        value={this.state.expObject.state}\n                        onChange={this.handleChange}\n\n                        type='text'\n                        name='state'\n                        placeholder='XX'\n                        maxLength='2'\n                        required\n                    />\n                </div>\n\n                <div className='form-section h'>\n                    <label htmlFor='title'>Job Title</label>\n                    <input \n                        onChange={this.handleChange}\n                        value={this.state.expObject.title}\n\n                        type='text'\n                        name='title'\n                        placeholder='Enter Title'\n                        required\n                    />\n                </div>\n\n                <div className='form-section hh'>\n                    <label htmlFor='year-from'>From</label>\n                    <input \n                        onChange={this.handleChange}\n                        value={this.state.expObject.from}\n                        type='number'\n                        name='from'\n                        min='1940'\n                        max='2100'\n                        step='1'\n                        placeholder='YYYY'\n                        required\n                    />\n                </div>\n\n                <div className='form-section hh'>\n                    <label htmlFor='year-to'>To</label>\n                    <input \n                        onChange={this.handleChange}\n                        value={this.state.expObject.to}\n                        type='text'\n                        name='to'\n                        maxLength='7'\n                        placeholder='YYYY or Present'\n                        required\n                    />\n                </div>\n\n                <div className='form-section'>\n                    <label htmlFor='title-input'>Additional</label>\n                    <textarea \n                        onChange={this.handleChange}\n                        value={this.state.expObject.additional}\n                        type='text'\n                        name='additional'\n                        id='company-add'\n                        placeholder='Responsibilites / Achievements'\n                    />\n                </div>\n\n                <div className='form-btns'>\n                    <button type='submit' className='btn submit' >Add Company</button>\n                    <button type='cancel' className='btn cancel' onClick={this.resetForm}>Cancel</button>\n                </div>\n            </form>\n            \n            <SectionFooter activeBtn={activeBtn} toggleForm={this.toggleForm}/>\n\n        </div> \n        )\n    }\n}\n\nexport default PracticalExperience","import React, { Component } from 'react'\nimport EditableLabel from 'react-inline-editing';\n\nclass PersonalInfo extends Component {\n    constructor(props) {\n        super(props)\n\n        this._handleFocus = this._handleFocus.bind(this);\n        this._handleFocusOut = this._handleFocusOut.bind(this);\n\n        this.state = {\n\n        }\n    }\n\n    _handleFocus(text) {\n        console.log('Focused with text: ' + text);\n    }\n\n    _handleFocusOut(text) {\n        console.log('Left editor with text: ' + text);\n    }\n\n    render() {\n        return(\n            <div className='container personal'>\n\n                <div className='personal-name'>\n                    <EditableLabel \n                    text='First Name'\n                    labelClassName='editable-label label'\n                    inputClassName='editable-label input'\n                    // inputWidth='200px'\n                    // inputHeight='25px'\n                    // inputMaxLength='50'\n                    // labelFontWeight='bold'\n                    // inputFontWeight='bold'\n                    onFocus={this._handleFocus}\n                    onFocusOut={this._handleFocusOut}\n                    ></EditableLabel>\n\n                    <EditableLabel \n                    text='Last Name'\n                    labelClassName='editable-label label'\n                    inputClassName='editable-label input'\n                    // inputWidth='200px'\n                    // inputHeight='25px'\n                    // inputMaxLength='50'\n                    // labelFontWeight='bold'\n                    // inputFontWeight='bold'\n                    onFocus={this._handleFocus}\n                    onFocusOut={this._handleFocusOut}\n                    ></EditableLabel>\n                </div>\n                \n                <div className='personal-info'>\n\n                    <EditableLabel \n                        text='123.456.7899'\n                        labelClassName='editable-info info'\n                        inputClassName='editable-info info-input'\n                        // inputWidth='200px'\n                        // inputHeight='25px'\n                        // inputMaxLength='50'\n                        // labelFontWeight='bold'\n                        // inputFontWeight='bold'\n                        onFocus={this._handleFocus}\n                        onFocusOut={this._handleFocusOut}\n                        ></EditableLabel>\n\n                    <EditableLabel \n                        text='yourEmail@gmail.com'\n                        labelClassName='editable-info info'\n                        inputClassName='editable-info info-input'\n                        // inputWidth='200px'\n                        // inputHeight='25px'\n                        // inputMaxLength='50'\n                        // labelFontWeight='bold'\n                        // inputFontWeight='bold'\n                        onFocus={this._handleFocus}\n                        onFocusOut={this._handleFocusOut}\n                        ></EditableLabel>\n                    <EditableLabel \n                        text='portfolio.com'\n                        labelClassName='editable-info info'\n                        inputClassName='editable-info info-input'\n                        // inputWidth='200px'\n                        // inputHeight='25px'\n                        // inputMaxLength='50'\n                        // labelFontWeight='bold'\n                        // inputFontWeight='bold'\n                        onFocus={this._handleFocus}\n                        onFocusOut={this._handleFocusOut}\n                        ></EditableLabel>\n                </div>\n            \n            </div>\n        )\n    }\n}\n\nexport default PersonalInfo\n\n//<label class='editable-label label' type='text' value='Hello'>Hello</label>\n//<input class='editable-label input' type='text' value='Hello'></input>","import React from 'react';\nimport uniqid from \"uniqid\";\n\nconst SkillsItem = (props) => {\n    const { tasks } = props;\n\n    return (\n        <ul>\n            {tasks.map((task) => {\n                return <li key={uniqid()}>{task}</li>\n            })}\n        </ul>\n    )\n}\n\nexport default SkillsItem;","import React, { Component } from 'react';\nimport SectionHeader from './SectionHeader';\nimport SkillsItem from './SkillsItem';\n\nclass Skills extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            task: \"\",\n            tasks: [],\n        };\n    }\n  \n    handleChange = (e) => {\n      \n      //console.log(e.target.value)\n  \n      this.setState({\n        task: e.target.value,\n      })\n    }\n  \n    onSubmitTask = (e) => {\n      e.preventDefault();\n  \n      this.setState({\n        tasks: this.state.tasks.concat(this.state.task), \n        task: \"\",\n      });\n\n    }\n\n\n    render() {\n        const { task, tasks } = this.state;\n        \n        return (\n            <div className='container skills'> \n\n                <SectionHeader name='Sofware Knowledge + Skills'/>\n                \n                <form className='form-skills' onSubmit={this.onSubmitTask}>\n                {/* <label htmlFor=\"taskInput\">Enter Skill</label> */}\n\n                    <input \n                        onChange={this.handleChange}\n                        value={this.state.task}\n                        type=\"text\" \n                        id=\"taskInput\" \n                        placeholder= 'JavaScript'\n                    />\n\n                    <button className='btn add-skill' type=\"submit\">Add Skill</button>\n                </form>\n\n                <SkillsItem tasks={tasks} />\n\n            </div>\n        )\n    }\n}\n\nexport default Skills\n","import React, { Component } from \"react\";\nimport Education from \"./components/Education\";\nimport PracticalExperience from \"./components/PracticalExperience\";\nimport PersonalInfo from \"./components/PersonalInfo\";\nimport Skills from \"./components/Skills\";\nimport './normalize.css';\nimport './App.css';\n\n\nclass App extends Component {\n\n  render() {\n\n    return (\n      <div className='App'>\n\n        <h1 className='hero'>Resume Builder</h1>\n        \n        <PersonalInfo />\n\n        <Education />\n\n        <Skills />\n\n        <PracticalExperience />\n        \n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport App from './App';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n/*\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n*/\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n\n//reportWebVitals();\n"],"sourceRoot":""}